{"ast":null,"code":"var _jsxFileName = \"/Users/jmager/Desktop/mtufishing/src/Routes.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './Home'; // Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\n\nvar routes = [{\n  path: '/',\n  exact: true,\n  sidebar: function sidebar() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  },\n  main: function main() {\n    return React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n}, {\n  path: '/bubblegum',\n  sidebar: function sidebar() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '10px',\n        width: '40%',\n        background: '#f0f0f0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/bubblegum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Bubblegum\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/shoelaces\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Shoelaces\")))));\n  },\n  main: function main() {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Bubblegum\");\n  }\n}, {\n  path: '/shoelaces',\n  sidebar: function sidebar() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"shoelaces!\");\n  },\n  main: function main() {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Shoelaces\");\n  }\n}];\n\nvar SidebarExample = function SidebarExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, routes.map(function (route, index) {\n    return (// You can render a <Route> in as many places\n      // as you want in your app. It will render along\n      // with any other <Route>s that also match the URL.\n      // So, a sidebar or breadcrumbs or anything else\n      // that requires you to render multiple things\n      // in multiple places at the same URL is nothing\n      // more than multiple <Route>s.\n      React.createElement(Route, {\n        key: index,\n        path: route.path,\n        exact: route.exact,\n        component: route.sidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })\n    );\n  }), React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      padding: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, routes.map(function (route, index) {\n    return (// Render more <Route>s with the same paths as\n      // above, but different components this time.\n      React.createElement(Route, {\n        key: index,\n        path: route.path,\n        exact: route.exact,\n        component: route.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })\n    );\n  }))));\n};\n\nexport default SidebarExample;","map":{"version":3,"sources":["/Users/jmager/Desktop/mtufishing/src/Routes.js"],"names":["React","BrowserRouter","Router","Route","Link","Home","routes","path","exact","sidebar","main","padding","width","background","listStyleType","SidebarExample","display","map","route","index","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport Home from './Home';\n// Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\tsidebar: () => <div />,\n\t\tmain: () => <Home />\n\t},\n\t{\n\t\tpath: '/bubblegum',\n\t\tsidebar: () => (\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: '10px',\n\t\t\t\t\t\twidth: '40%',\n\t\t\t\t\t\tbackground: '#f0f0f0'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0 }}>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/bubblegum\">Bubblegum</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/shoelaces\">Shoelaces</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t),\n\t\tmain: () => <h2>Bubblegum</h2>\n\t},\n\t{\n\t\tpath: '/shoelaces',\n\t\tsidebar: () => <div>shoelaces!</div>,\n\t\tmain: () => <h2>Shoelaces</h2>\n\t}\n];\n\nconst SidebarExample = () => (\n\t<Router>\n\t\t<div style={{ display: 'flex' }}>\n\t\t\t{routes.map((route, index) => (\n\t\t\t\t// You can render a <Route> in as many places\n\t\t\t\t// as you want in your app. It will render along\n\t\t\t\t// with any other <Route>s that also match the URL.\n\t\t\t\t// So, a sidebar or breadcrumbs or anything else\n\t\t\t\t// that requires you to render multiple things\n\t\t\t\t// in multiple places at the same URL is nothing\n\t\t\t\t// more than multiple <Route>s.\n\t\t\t\t<Route key={index} path={route.path} exact={route.exact} component={route.sidebar} />\n\t\t\t))}\n\n\t\t\t<div style={{ flex: 1, padding: '10px' }}>\n\t\t\t\t{routes.map((route, index) => (\n\t\t\t\t\t// Render more <Route>s with the same paths as\n\t\t\t\t\t// above, but different components this time.\n\t\t\t\t\t<Route key={index} path={route.path} exact={route.exact} component={route.main} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t</Router>\n);\n\nexport default SidebarExample;\n"]},"metadata":{},"sourceType":"module"}